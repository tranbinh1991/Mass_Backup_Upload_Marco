

Option Explicit
Public SapGuiAuto, WScript, msgcol
Public objGui  As GuiApplication
Public objConn As GuiConnection
Public objSess As GuiSession
Public objSBar As GuiStatusbar
Public objSheet As Worksheet
Dim W_System
Dim iCtr As Integer
Const tcode = "SESSION_MANAGER"



Function Attach_Session(iRow, Optional mysystem As String) As Boolean
Dim il, it
Dim W_conn, W_Sess

' Unless a system is provided (XXXYYY where XXX is SID and YYY client)
' get the system from the sheet (in this case it is in cell A8)
If mysystem = "" Then
    W_System = ActiveSheet.Cells(iRow, 1)
Else
    W_System = mysystem
End If

' If we are already connected to a session, exit do not try again
If W_System = "" Then
   Attach_Session = False
   Exit Function
End If

' If the session object is not nil, use that session (assume connected to the correct session)
If Not objSess Is Nothing Then
    If objSess.Info.SystemName & objSess.Info.Client = W_System Then
        Attach_Session = True
        Exit Function
    End If
End If

' If not connected to anything, set up the objects
If objGui Is Nothing Then
   Set SapGuiAuto = GetObject("SAPGUI")
   Set objGui = SapGuiAuto.GetScriptingEngine
End If

' Cycle through the open SAP GUI sessions and check which is in the same system running the matching transaction
For il = 0 To objGui.Children.Count - 1
    Set W_conn = objGui.Children(il + 0)
    For it = 0 To W_conn.Children.Count - 1
        Set W_Sess = W_conn.Children(it + 0)
        If W_Sess.Info.SystemName & W_Sess.Info.Client = W_System And W_Sess.Info.Transaction = tcode Then
            Set objConn = objGui.Children(il + 0)
            Set objSess = objConn.Children(it + 0)
            Exit For
        End If
    Next
Next

' If nothing is found, display and error message
If objSess Is Nothing Then
   MsgBox "No active session to system " + W_System + " with transaction " + tcode + ", or scripting is not enabled.", vbCritical + vbOKOnly
   Attach_Session = False
   Exit Function
End If

' Turn on scripting
If IsObject(WScript) Then
   WScript.ConnectObject objSess, "on"
   WScript.ConnectObject objGui, "on"
End If

' Maximize the window of the connected session
Set objSBar = objSess.findById("wnd[0]/sbar")
objSess.findById("wnd[0]").Maximize
Attach_Session = True


End Function

Public Sub StartProcessing()

Dim W_Obj1, W_Obj2, W_Obj3, W_Obj4, iRow
Dim W_Func
Dim W_Src_Ord
Dim W_Ret As Boolean
Dim itemcount As Integer
Dim itemmax As Integer
Const startrow As Integer = 11 'First row with actual data

Set objSheet = ActiveWorkbook.ActiveSheet
' Connect to a system stored in cell A8
W_Ret = Attach_Session(8)
If Not W_Ret Then
    MsgBox "Not connected to client"
    GoTo MyEnd
End If

itemcount = 0
itemmax = 0

' Determine the number of items to be processed: where the status is zero
For iRow = startrow To objSheet.UsedRange.Rows.Count
    If objSheet.Cells(iRow, 5) = "0" Then
        itemmax = itemmax + 1
    End If
Next
' Update the counter in cell A9
objSheet.Cells(9, 1) = itemcount & "/" & itemmax

' Cycle through the rows with status 0 and call the ProcessRow function to process them
For iRow = startrow To objSheet.UsedRange.Rows.Count
    If objSheet.Cells(iRow, 5) = "0" Then
        Call ProcessRow(iRow)
        itemcount = itemcount + 1
        objSheet.Cells(9, 1) = itemcount & "/" & itemmax
    End If
Next
           

MyEnd:
' destory the objects, free up memory
    Set objSess = Nothing
    Set objGui = Nothing
    Set SapGuiAuto = Nothing
    
    MsgBox "Script completed.", vbInformation + vbOKOnly
       
End Sub

Function ProcessRow(iRow)
Dim CompanyCode, DocumentNumber, Path, FileName
Dim lineitems As Long

' Set the line status to "processing..."
objSheet.Cells(iRow, 5) = 1

'BP Number
If objSheet.Cells(iRow, 1) <> "" Then
    CompanyCode = objSheet.Cells(iRow, 1)
Else
    CompanyCode = "xxxxxx"
End If

'Seartch term
If objSheet.Cells(iRow, 2) <> "" Then
    DocumentNumber = objSheet.Cells(iRow, 2)
Else
    DocumentNumber = ""
End If



If objSheet.Cells(iRow, 3) <> "" Then
    Path = objSheet.Cells(iRow, 3)
Else
    Path = ""
End If



If objSheet.Cells(iRow, 4) <> "" Then
    FileName = objSheet.Cells(iRow, 4)
Else
    FileName = ""
End If






' Set error handling to the below code where we can capture if a line had failed in the GUI script
On Error GoTo myerr

' SAP GUI Script starts here




objSess.findById("wnd[0]").Maximize
objSess.findById("wnd[0]/tbar[0]/okcd").Text = "/nfb03"
objSess.findById("wnd[0]").sendVKey 0
objSess.findById("wnd[0]/usr/txtRF05L-BELNR").Text = DocumentNumber
objSess.findById("wnd[0]/usr/ctxtRF05L-BUKRS").Text = CompanyCode
objSess.findById("wnd[0]/usr/txtRF05L-GJAHR").SetFocus
objSess.findById("wnd[0]/usr/txtRF05L-GJAHR").caretPosition = 4
objSess.findById("wnd[0]").sendVKey 0
objSess.findById("wnd[0]/titl/shellcont/shell").PressContextButton "%GOS_TOOLBOX"
objSess.findById("wnd[0]/titl/shellcont/shell").SelectContextMenuItem "%GOS_PCATTA_CREA"
objSess.findById("wnd[1]/usr/ctxtDY_PATH").SetFocus
objSess.findById("wnd[1]/usr/ctxtDY_PATH").caretPosition = 39
objSess.findById("wnd[1]").sendVKey 4
objSess.findById("wnd[2]").Close
objSess.findById("wnd[1]/usr/ctxtDY_PATH").Text = Path
objSess.findById("wnd[1]/usr/ctxtDY_FILENAME").Text = FileName
objSess.findById("wnd[1]/usr/ctxtDY_FILENAME").SetFocus
objSess.findById("wnd[1]/usr/ctxtDY_FILENAME").caretPosition = 11
objSess.findById("wnd[1]/tbar[0]/btn[0]").press
objSess.findById("wnd[0]/tbar[0]/btn[3]").press
objSess.findById("wnd[0]/tbar[0]/btn[3]").press



' Gets the message from the status bar and save it in column B
objSheet.Cells(iRow, 7) = objSBar.Text

' Update the Status to "Completed" and exit
objSheet.Cells(iRow, 5) = 2
Exit Function

myerr:
' Update the status to "Error"
objSheet.Cells(iRow, 5) = 3

End Function
